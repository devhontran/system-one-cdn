var a = Object.defineProperty; var c = (i, e, t) => e in i ? a(i, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : i[e] = t; var r = (i, e, t) => (c(i, typeof e != "symbol" ? e + "" : e, t), t); import { g as n, c as o, S as d, l as h, G as u, a as M } from "./global.js"; class q { constructor({ wrap: e, listSplide: t }) { r(this, "idRequest"); r(this, "storeMarquee"); r(this, "DOM", { wrap: null, listSplide: null }); this.idRequest = null, this.DOM = { wrap: e, listSplide: t }, this.storeMarquee = { scrollWidth: 0, velocityScroller: 0, refSeter_1: n.quickSetter(this.DOM.listSplide && this.DOM.listSplide[0], "x", "%"), refSeter_2: n.quickSetter(this.DOM.listSplide && this.DOM.listSplide[1], "x", "%"), initialOffset: 100, direction: -1 }, this.checkImageLoaded(this.observeElementVisibility.bind(this)) } checkImageLoaded(e) { if (!this.DOM.listSplide) return; const t = this.DOM.listSplide[0].querySelector("img"); if (!t) { console.error("No image found"); return } const l = () => { if (!this.DOM.listSplide) return; const s = o(4) / this.DOM.listSplide[0].clientWidth * 100; console.log("run____________-", s), this.storeMarquee.initialOffset = this.storeMarquee.initialOffset + s - .5, e() }; t.addEventListener("load", l.bind(this)) } play() { const e = () => { this.storeMarquee.scrollWidth += .05 * this.storeMarquee.direction + this.storeMarquee.velocityScroller, this.storeMarquee.refSeter_1(this.storeMarquee.scrollWidth % this.storeMarquee.initialOffset), this.storeMarquee.refSeter_2(this.storeMarquee.scrollWidth % this.storeMarquee.initialOffset), this.idRequest = requestAnimationFrame(e) }; return e } observeElementVisibility() { var e, t; !((e = this == null ? void 0 : this.DOM) != null && e.wrap) || window.innerWidth > 991 || !((t = this == null ? void 0 : this.DOM) != null && t.listSplide) || new IntersectionObserver(l => { l.forEach(s => { s.isIntersecting ? this.idRequest = requestAnimationFrame(this.play()) : this.idRequest && cancelAnimationFrame(this.idRequest) }) }).observe(this.DOM.wrap) } } class S { constructor() { const e = document.querySelectorAll(".lading-splide-wrap"); e.length && e.forEach(t => { new q({ wrap: t, listSplide: t.querySelectorAll(".landing-hero-content-brands") }) }) } } n.registerPlugin(d); class p { constructor() { const e = document.body.getAttribute("data-page") || "landing", t = { landing: () => { new S } }; t[e] && t[e](), h.init(), new u, M.init({ once: !0, duration: 800, startEvent: "DOMContentLoaded", offset: o(10) }) } } new p;
